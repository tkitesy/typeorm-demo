{"ast":null,"code":"import \"reflect-metadata\";\nimport { createConnection } from \"typeorm\";\nimport { User } from \"./entity/User\";\nconst options = {\n  type: \"sqlite\",\n  database: `./data/data.sqlite`,\n  entities: [User],\n  logging: true,\n  synchronize: false\n};\ncreateConnection(options).then(async connection => {\n  console.log(\"Inserting a new user into the database...\");\n  const user = new User();\n  user.firstName = \"Timber\";\n  user.lastName = \"Saw\";\n  user.age = 25;\n  await connection.manager.save(user);\n  console.log(\"Saved a new user with id: \" + user.id);\n  console.log(\"Loading users from the database...\");\n  const users = await connection.manager.find(User);\n  console.log(\"Loaded users: \", users);\n  console.log(\"Here you can setup and run express/koa/any other framework.\");\n}).catch(error => console.log(error));","map":{"version":3,"sources":["C:/Users/tkitesy/Documents/code/demo/next-typeorm-demo/src/index.ts"],"names":["createConnection","User","options","type","database","entities","logging","synchronize","then","connection","console","log","user","firstName","lastName","age","manager","save","id","users","find","catch","error"],"mappings":"AAAA,OAAO,kBAAP;AACA,SAA4BA,gBAA5B,QAAoD,SAApD;AACA,SAASC,IAAT,QAAqB,eAArB;AAEA,MAAMC,OAA0B,GAAG;AACjCC,EAAAA,IAAI,EAAE,QAD2B;AAEjCC,EAAAA,QAAQ,EAAG,oBAFsB;AAGjCC,EAAAA,QAAQ,EAAE,CAACJ,IAAD,CAHuB;AAIjCK,EAAAA,OAAO,EAAE,IAJwB;AAKjCC,EAAAA,WAAW,EAAC;AALqB,CAAnC;AAQAP,gBAAgB,CAACE,OAAD,CAAhB,CACGM,IADH,CACQ,MAAOC,UAAP,IAAsB;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACA,QAAMC,IAAI,GAAG,IAAIX,IAAJ,EAAb;AACAW,EAAAA,IAAI,CAACC,SAAL,GAAiB,QAAjB;AACAD,EAAAA,IAAI,CAACE,QAAL,GAAgB,KAAhB;AACAF,EAAAA,IAAI,CAACG,GAAL,GAAW,EAAX;AACA,QAAMN,UAAU,CAACO,OAAX,CAAmBC,IAAnB,CAAwBL,IAAxB,CAAN;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BC,IAAI,CAACM,EAAhD;AAEAR,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,QAAMQ,KAAK,GAAG,MAAMV,UAAU,CAACO,OAAX,CAAmBI,IAAnB,CAAwBnB,IAAxB,CAApB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BQ,KAA9B;AAEAT,EAAAA,OAAO,CAACC,GAAR,CAAY,6DAAZ;AACD,CAfH,EAgBGU,KAhBH,CAgBUC,KAAD,IAAWZ,OAAO,CAACC,GAAR,CAAYW,KAAZ,CAhBpB","sourcesContent":["import \"reflect-metadata\";\nimport { ConnectionOptions, createConnection } from \"typeorm\";\nimport { User } from \"./entity/User\";\n\nconst options: ConnectionOptions = {\n  type: \"sqlite\",\n  database: `./data/data.sqlite`,\n  entities: [User],\n  logging: true,\n  synchronize:false,\n};\n\ncreateConnection(options)\n  .then(async (connection) => {\n    console.log(\"Inserting a new user into the database...\");\n    const user = new User();\n    user.firstName = \"Timber\";\n    user.lastName = \"Saw\";\n    user.age = 25;\n    await connection.manager.save(user);\n    console.log(\"Saved a new user with id: \" + user.id);\n\n    console.log(\"Loading users from the database...\");\n    const users = await connection.manager.find(User);\n    console.log(\"Loaded users: \", users);\n\n    console.log(\"Here you can setup and run express/koa/any other framework.\");\n  })\n  .catch((error) => console.log(error));\n"]},"metadata":{},"sourceType":"module"}